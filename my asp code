function getAll(parameters,sql)
	'on error resume next
	dim mysql,myparameters,i,keys,items,c
	if TypeName(parameters)="Error" then  
		parameters=""
	end if
	if TypeName(sql)<>"Error" then mysql=sql else mysql=""
	set c  = createObj("command")
	c.ActiveConnection = MLMPConn
	c.CommandType = 1
	c.commandtext=mysql
	if typeName(parameters)="Dictionary" then
		keys = parameters.keys
		items = parameters.items
		for i=0 to parameters.count-1
			c.Parameters.Append c.CreateParameter("@"&keys(i), adVarWChar, adParamInput, 3000 ,items(i))
		next
	else
		if parameters<>"" then
			c.Parameters.Append c.CreateParameter("@parameter", adVarWChar, adParamInput, 3000 ,parameters)
		end if
	end if
	keyword = lcase(left(trim(mysql),6))
	if keyword = "insert" then
		c.Execute()
		c.Parameters.Refresh
		c.commandtext="select SCOPE_IDENTITY()"
		getAll = c.execute()(0)
	elseif keyword = "update" or keyword = "delete" then
		c.execute getAll
	end if
	set c = nothing
end function
function createObj(objectType)
	select case Lcase(objectType)
		case "dictionary"
			set createObj = Server.CreateObject("Scripting.Dictionary")
		case "dic"
			set createObj = Server.CreateObject("Scripting.Dictionary")
		case  "connection"
			set createObj = server.CreateObject ("ADODB.Connection")
		case  "conn"
			set createObj = server.CreateObject ("ADODB.Connection")
		case "recordset"
			set createObj = server.CreateObject ("ADODB.RecordSet")
		case "rs"
			set createObj = server.CreateObject ("ADODB.RecordSet")
		case "command"
			set createObj = server.createobject("ADODB.Command")
		case "cmd"
			set createObj = server.createobject("ADODB.Command")
	end select
end function
function getMemberID(hash)
	if hash<>"" then
		dim sql : sql = "select memberid from tmemberaccstatus where hash=?"
		set Rs = getAll(hash,sql)
		if not Rs.EOF then getMemberID = trim(Rs("memberid")) else getMemberID = "" end if
	else
		getMemberID = ""
	end if
end function



Class JSONClass
	Dim SqlString  
	Dim JSON 
	Dim dic
	Public Function GetJSON ()
		dim Rs,returnStr,i,oneRecord
		set Rs = getAll(dic,SqlString)
		' 生成JSON字符串
		if    Rs.eof=false and   Rs.Bof=false then
			returnStr="{ "& JSON &":{"&chr(34)&"records"&chr(34)&":["
			while Rs.eof=false
				oneRecord= "{"
				for i=0 to Rs.Fields.Count -1
					oneRecord=oneRecord &chr(34) & Rs.Fields(i).Name & chr(34) &":"& chr(34) &Rs.Fields(i).Value&chr(34)&","
				Next
				'去除记录最后一个字段后的","
				oneRecord=left(oneRecord,InStrRev(oneRecord,",")-1)& "},"
				returnStr=returnStr  & oneRecord
				Rs.MoveNext
			Wend
			' 去除所有记录数组后的","
			returnStr=left(returnStr,InStrRev(returnStr,",")-1)&"]}}"
		else
			response.write("{"&chr(34)&"status"&chr(34)&":400,"&chr(34)&"error_message"&chr(34)&":"&chr(34)&"No Record."&chr(34)&"}" )
		end if
		Rs.close
		set Rs=Nothing
		GetJSON=returnStr
   End Function
End Class
Function ReplaceHTML(str,patrn, replStr) 
	Dim regEx, str1 ' 建立变量。 
	Set regEx = New RegExp ' 建立正则表达式。 
	regEx.Pattern = patrn ' 设置模式。 
	regEx.IgnoreCase = True ' 设置是否区分大小写。 
	ReplaceHTML = regEx.Replace(str, replStr) ' 作替换。 
End Function

Sub WriteToFile(strFile, strContent, blnAppend)
	' strFile 文件名(路径) , strContent 写入的内容, blnAppend 是否追加
	strFile = server.mappath(strFile)
	On Error Resume Next
	Set objFSO = Server.CreateObject("Scripting.FileSystemObject")
	If blnAppend Then
		Set objWriteText = objFSO.OpenTextFile(strFile,8,True)
	Else
		Set objWriteText = objFSO.OpenTextFile(strFile,2,True)
	End If
	'datetime = Year(now)&"-"&right(0&month(now),2)&"-"&right(0&day(now),2)&chr(32)&right(0&hour(now),2)&":"&right(0&minute(now),2)&":"&right(0&second(now),2)
	objWriteText.WriteLine (strContent)
	Set objWriteText = Nothing
	Set objFSO = Nothing
	Select Case Err
		Case 424 Response.Write "no permission"
		Case Else Response.Write Err.Description
	End Select
End Sub
function WriteBase64File(fileName, content)
	Dim xml
	Set xml=Server.CreateObject("MSXML2.DOMDocument")
	Dim stm
	Set stm=Server.CreateObject("ADODB.Stream")
	Set root = xml.createElement("tif")
	root.text = content
	root.dataType = "bin.base64"
	stm.Type=1
	stm.Open
	stm.Write root.nodeTypedValue
	stm.SaveToFile Server.MapPath(fileName)
	stm.Close
	Set root = Nothing
	Set xml=Nothing
	Set stm=Nothing
end function
Function PadNumber(Number, width)
	Dim padded : padded = CStr(Number)
	While (Len(padded) < width)
	padded    = "0" & padded
	Wend
	PadNumber = padded
End Function
Function sendMail(sendTo,Subject,body)
	On Error Resume Next
	Set Mail = CreateObject("CDO.Message")
	Mail.Configuration.Fields.Item ("http://schemas.microsoft.com/cdo/configuration/sendusing") = 2
	Mail.Configuration.Fields.Item ("http://schemas.microsoft.com/cdo/configuration/smtpserver") ="smtp.gmail.com"
	Mail.Configuration.Fields.Item ("http://schemas.microsoft.com/cdo/configuration/smtpserverport") = 465
	Mail.Configuration.Fields.Item ("http://schemas.microsoft.com/cdo/configuration/smtpusessl") = 1
	Mail.Configuration.Fields.Item ("http://schemas.microsoft.com/cdo/configuration/smtpconnectiontimeout") = 60
	Mail.Configuration.Fields.Item ("http://schemas.microsoft.com/cdo/configuration/smtpauthenticate") = 1
	Mail.Configuration.Fields.Item ("http://schemas.microsoft.com/cdo/configuration/sendusername") ="noreply@gkash.my"
	'You can also use you email address that’s setup through google apps.
	Mail.Configuration.Fields.Item ("http://schemas.microsoft.com/cdo/configuration/sendpassword") ="gkash2018"
	Mail.Configuration.Fields.Update
	Mail.Subject=Subject
	Mail.From="noreply@gkash.my"
	Mail.To = sendTo
	Mail.HtmlBody=body
	Mail.Send
	Set Mail = Nothing
End Function
Function randomNumber(length)
	Randomize
	Dim str
	For i=1 To length
		str = str&Right(CStr(Int(10*Rnd+1)),1)
	Next
	randomNumber =str
End Function

